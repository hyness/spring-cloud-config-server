version: '2'

# Docker Compose example for testing Postgres

services:
  # Configured through environment variables
  config-server-env:
    depends_on:
      - postgres
    container_name: config-server-env
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8881:8888"
    environment:
      SPRING_PROFILES_ACTIVE: jdbc
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cloud_config
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password

  # Configured through mounted config volume
  config-server-dir:
    depends_on:
      - postgres
    container_name: config-server-dir
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8882:8888"
    volumes:
      - ./config:/config

  # Configured through system properties
  config-server-props:
    depends_on:
      - postgres
    container_name: config-server-props
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8883:8888"
    environment:
      JAVA_OPTS: >
        -Dspring.profiles.active=jdbc
        -Dspring.datasource.url=jdbc:postgresql://postgres:5432/cloud_config
        -Dspring.datasource.username=root
        -Dspring.datasource.password=password

  # Configured through command line arguments
  config-server-args:
    depends_on:
      - postgres
    container_name: config-server-args
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    command:
      - --spring.profiles.active=jdbc
      - --spring.datasource.url=jdbc:postgresql://postgres:5432/cloud_config
      - --spring.datasource.username=root
      - --spring.datasource.password=password
    ports:
      - "8884:8888"

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cloud_config
    volumes:
      - .:/docker-entrypoint-initdb.d
