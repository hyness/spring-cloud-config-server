version: '3.8'

# Docker Compose example for testing Spring Cloud Bus Kafka

services:
  config-server-env:
    depends_on:
      - kafka
    container_name: config-server-env
    image: hyness/spring-cloud-config-server
    ports:
      - "8881:8888"
    environment:
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - SPRING_PROFILES_ACTIVE=cloud-bus-kafka
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/spring-cloud-samples/config-repo
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  config-server-dir:
    depends_on:
      - kafka
    container_name: config-server-dir
    image: hyness/spring-cloud-config-server
    ports:
      - "8882:8888"
    volumes:
      - ./config:/config
  config-server-props:
    depends_on:
      - kafka
    container_name: config-server-props
    image: hyness/spring-cloud-config-server
    ports:
      - "8883:8888"
    environment:
      JAVA_OPTS: -Dmanagement.endpoints.web.exposure.include=* -Dspring.profiles.active=cloud-bus-kafka -Dspring.cloud.config.server.git.uri=https://github.com/spring-cloud-samples/config-repo -Dspring.kafka.bootstrap-servers=kafka:9092
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    depends_on:
      - zookeeper
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "springCloudBus:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock