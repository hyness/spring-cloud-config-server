version: '2'

# Docker Compose example for testing a native file system

services:
  # Configured through environment variables
  config-server-env:
    container_name: config-server-env
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8881:8888"
    environment:
      SPRING_PROFILES_ACTIVE: native
    volumes:
      - ./config:/config

  # Configured through mounted config file
  config-server-dir:
    container_name: config-server-dir
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8882:8888"
    volumes:
      - ./config:/config
      - ./application.yml:/opt/spring-cloud-config-server/application.yml

  # Configured through system properties
  config-server-props:
    container_name: config-server-props
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8883:8888"
    environment:
      JAVA_OPTS: -Dspring.profiles.active=native
    volumes:
      - ./config:/config

  # Configured through command line arguments
  config-server-args:
    container_name: config-server-args
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8884:8888"
    command: --spring.profiles.active=native
    volumes:
      - ./config:/config
