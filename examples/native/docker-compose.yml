version: '2'

# Docker Compose example for testing a native file system

services:
  # Configured through environment variables
  config-server-env:
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8881:8888"
    environment:
      SPRING_PROFILES_ACTIVE: native
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS: /native-files
    volumes:
      - ./native-files:/native-files

  # Configured through mounted config file
  config-server-dir:
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8882:8888"
    volumes:
      - ./config:/config
      - ./native-files:/native-files

  # Configured through system properties
  config-server-props:
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8883:8888"
    environment:
      JAVA_OPTS: -Dspring.profiles.active=native -Dspring.cloud.config.server.native.searchLocations=/native-files
    volumes:
      - ./native-files:/native-files

  # Configured through command line arguments
  config-server-args:
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8884:8888"
    command: --spring.profiles.active=native --spring.cloud.config.server.native.searchLocations=/native-files
    volumes:
      - ./native-files:/native-files
