version: '2'

# Docker Compose example for testing a redis backed repo

services:
  # Configured through environment variables
  config-server-env:
    depends_on:
      - redis
    container_name: config-server-env
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8881:8888"
    environment:
      SPRING_PROFILES_ACTIVE: redis
      SPRING_REDIS_HOST: redis

  # Configured through mounted config volume
  config-server-dir:
    depends_on:
      - redis
    container_name: config-server-dir
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8882:8888"
    volumes:
      - ./config:/config

  # Configured through system properties
  config-server-props:
    depends_on:
      - redis
    container_name: config-server-props
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8883:8888"
    environment:
      JAVA_OPTS: >
        -Dspring.profiles.active=redis
        -Dspring.redis.host=redis

  # Configured through command line arguments
  config-server-args:
    depends_on:
      - redis
    container_name: config-server-args
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8884:8888"
    command:
      - --spring.profiles.active=redis
      - --spring.redis.host=redis

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
    - ./populate-redis.sh:/data/populate-redis.sh
