name: Build and deploy OCI image to registry

on:
  workflow_call:
    inputs:
      image-jvm-type:
        description: JVM type for output image
        type: string
        default: jre
      image-jvm-version:
        description: JVM version for output image
        type: string
        default: 17
      image-name:
        description: The output image name
        type: string
        required: true
      java-build-distribution:
        description: Java distribution to use for build
        type: string
        default: temurin
      java-build-version:
        description: Java version to build with
        type: string
        default: 17
      registry:
        description: The registry to deploy to
        type: string
        required: true
      tags:
        description: Comma separated list of docker tags to create
        type: string

jobs:
  generate-jvm-tag:
    uses: ./.github/workflows/generate-jvm-tag.yml
    with:
      jvm-type: ${{ inputs.jvm-type }}
      jvm-version: ${{ inputs.jvm-version }}

  build-and-push:
    name: Build and deploy Java ${{ needs.generate-jvm-tag.outputs.jvm-tag }} OCI image to registry
    needs: generate-jvm-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ inputs.java-build-version }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-build-distribution }}
          java-version: ${{ inputs.java-build-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Add tags environment variable
        if: inputs.tags != ''
        run: echo "TAGS=-PdockerTags=${{ inputs.tags }}" >> $GITHUB_ENV

      - name: Setup Docker Hub credentials
        if: inputs.registry == 'docker.io'
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Setup GitHub Container Registry credentials
        if: inputs.registry == 'ghcr.io'
        run: |
          echo "DOCKER_USERNAME=${{ github.actor }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Build and deploy OCI image
        run: >
          ./gradlew bootBuildImage
          -PjvmType=${{ inputs.image-jvm-type }}
          -PjdkVersion=${{ inputs.image-jvm-version }}
          -PdockerUsername=${{ env.DOCKER_USERNAME }}
          -PdockerPassword=${{ env.DOCKER_PASSWORD }}
          $TAGS
          --imageName=${{ inputs.registry }}/${{ inputs.image-name }}
          --publishImage
